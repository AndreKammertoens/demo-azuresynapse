{
	"name": "ESE_SQL_0104_CreateSQLPoolProcedures_Spark",
	"properties": {
		"folder": {
			"name": "Europe Soccer Events/01 Setup"
		},
		"content": {
			"query": "-- =============================================================================\n-- European Soccer Events\n-- Azure Synapse Analytics Demo\n-- https://github.com/aessing/demo-azuresynapse\n-- -----------------------------------------------------------------------------\n-- Developer.......: Andre Essing (https://www.andre-essing.de/)\n--                                (https://github.com/aessing)\n--                                (https://twitter.com/aessing)\n--                                (https://www.linkedin.com/in/aessing/)\n-- -----------------------------------------------------------------------------\n-- THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n-- EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n-- WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n-- =============================================================================\n\n-- This script will create the table needed to load the load the data transformed\n-- by Dataflows into the SQL Pool.\n\n-- #############################################################################\n-- DON'T FORGET TO CHOOSE BUILT-IN AND THE CORRECT DATABASE\n-- DON'T FORGET TO CHANGE THE DATA LAKE NAME, URL AND PATH\n-- #############################################################################\n\n-- -----------------------------------------------------------------------------\n-- Create Europe Soccer Events schema 'ese_DataFlow'\n-- -----------------------------------------------------------------------------\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'ese_Spark')\n    EXEC('CREATE SCHEMA [ese_Spark]');\nGO\n\n-- -----------------------------------------------------------------------------\n-- Create Load Procedure\n-- -----------------------------------------------------------------------------\nCREATE PROC [ese_Spark].[sp_LoadGameEventsCopy] AS\nBEGIN\n\tTRUNCATE TABLE [ese_Spark].[GameEvents];\n\n\tCOPY INTO [ese_Spark].[GameEvents]\n\t\t(id_odsp 1, id_event 2, sort_order 3, time 4, event_type 5, event_type_str 6, event_type2 7, event_type2_str 8, side 9, side_str 10, event_team 11, opponent 12, player 13, player2 14, player_in 15, player_out 16, shot_place 17, shot_place_str 18, shot_outcome 19, shot_outcome_str 20, is_goal 21, location 22, location_str 23, bodypart 24, bodypart_str 25, assist_method 26, assist_method_str 27, situation 28, situation_str 29, country_code 30, time_bin 31)\n\tFROM 'https://demomdwhdls001weu.dfs.core.windows.net/europesoccerevents/curated/game_events.parquet'\n\tWITH\n\t\t(\n\t\tFILE_TYPE = 'PARQUET'\n\t\t,MAXERRORS = 0\n\t\t,COMPRESSION = 'snappy'\n\t\t,IDENTITY_INSERT = 'OFF'\n\t)\nEND\nGO\n\nCREATE PROC [ese_Spark].[sp_LoadGameEventsPolybase] AS\nBEGIN\n\tTRUNCATE TABLE [ese_Spark].[GameEvents];\n\n\tINSERT INTO [ese_Spark].[GameEvents]\n\tSELECT * FROM [ese_Staging].[GameEvents];\nEND\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "DemoSQLPool",
				"poolName": "DemoSQLPool"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}