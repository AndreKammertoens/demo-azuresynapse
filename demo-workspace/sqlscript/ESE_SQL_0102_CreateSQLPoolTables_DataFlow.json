{
	"name": "ESE_SQL_03_CreateTableDataFlow",
	"properties": {
		"folder": {
			"name": "Europe Soccer Events/00_Setup"
		},
		"content": {
			"query": "-- =============================================================================\n-- European Soccer Events\n-- Azure Synapse Analytics Demo\n-- https://github.com/aessing/demo-azuresynapse\n-- -----------------------------------------------------------------------------\n-- Developer.......: Andre Essing (https://www.andre-essing.de/)\n--                                (https://github.com/aessing)\n--                                (https://twitter.com/aessing)\n--                                (https://www.linkedin.com/in/aessing/)\n-- -----------------------------------------------------------------------------\n-- THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n-- EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n-- WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n-- =============================================================================\n\n-- This script will create the table needed to load the load the data transformed\n-- by Dataflows into the SQL Pool.\n\n-- #############################################################################\n-- DON'T FORGET TO CHOOSE BUILT-IN AND THE CORRECT DATABASE\n-- #############################################################################\n\n-- -----------------------------------------------------------------------------\n-- Create Europe Soccer Events schema 'ese_DataFlow'\n-- -----------------------------------------------------------------------------\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'ese_DataFlow')\n    EXEC('CREATE SCHEMA [ese_DataFlow]');\nGO\n\n-- -----------------------------------------------------------------------------\n-- Create tables\n-- -----------------------------------------------------------------------------\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'factGameEvents' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[factGameEvents]\nGO\nCREATE TABLE [ese_DataFlow].[factGameEvents]\n\t(\n\t id_odsp nvarchar(256),\n\t id_event nvarchar(256),\n\t sort_order int,\n\t time int,\n\t text nvarchar(256),\n\t event_type int,\n\t event_type2 int,\n\t side int,\n\t event_team nvarchar(256),\n\t opponent nvarchar(256),\n\t player nvarchar(256),\n\t player2 nvarchar(256),\n\t player_in nvarchar(256),\n\t player_out nvarchar(256),\n\t shot_place int,\n\t shot_outcome int,\n\t is_goal int,\n\t location int,\n\t bodypart int,\n\t assist_method int,\n\t situation int,\n\t country nvarchar(256)\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n\t)\nGO\nCREATE INDEX IX_factGameEvents_is_goal_country ON [ese_DataFlow].[factGameEvents](is_goal, country);\nGO\n\n-- =============================================================================\n-- Dimensions\n-- =============================================================================\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimAssistMethod' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimAssistMethod]\nGO\nCREATE TABLE [ese_DataFlow].[dimAssistMethod] (id int NOT NULL, AssistMethod nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimAssistMethod] add CONSTRAINT PK_dimAssistMethod_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimBodyPart' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimBodyPart]\nGO\nCREATE TABLE [ese_DataFlow].[dimBodyPart] (id int NOT NULL, BodyPart nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimBodyPart] add CONSTRAINT PK_dimBodyPart_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimCountry' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimCountry] \nGO\nCREATE TABLE [ese_DataFlow].[dimCountry] (Country nvarchar(128) NOT NULL, CountryCode nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimCountry] add CONSTRAINT PK_dimCountry_id PRIMARY KEY NONCLUSTERED (Country) NOT ENFORCED\nGO\nCREATE INDEX IX_dimCountry_CountryCode ON [ese_DataFlow].[dimCountry](CountryCode);\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimEventType' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimEventType]\nGO\nCREATE TABLE [ese_DataFlow].[dimEventType] (id int NOT NULL, EventType nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimEventType] add CONSTRAINT PK_dimEventType_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimEventType2' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimEventType2]\nGO\nCREATE TABLE [ese_DataFlow].[dimEventType2] (id int NOT NULL, EventType2 nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimEventType2] add CONSTRAINT PK_dimEventType2_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimLocation' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimLocation]\nGO\nCREATE TABLE [ese_DataFlow].[dimLocation] (id int NOT NULL, Location nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimLocation] add CONSTRAINT PK_dimLocation_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimShotOutcome' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimShotOutcome]\nGO\nCREATE TABLE [ese_DataFlow].[dimShotOutcome] (id int NOT NULL, ShotOutcome nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimShotOutcome] add CONSTRAINT PK_dimShotOutcome_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimShotPlace' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimShotPlace]\nGO\nCREATE TABLE [ese_DataFlow].[dimShotPlace] (id int NOT NULL, ShotPlace nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimShotPlace] add CONSTRAINT PK_dimShotPlace_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimSide' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimSide]\nGO\nCREATE TABLE [ese_DataFlow].[dimSide] (id int NOT NULL, Side nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimSide] add CONSTRAINT PK_dimSide_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'dimSituation' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[dimSituation]\nGO\nCREATE TABLE [ese_DataFlow].[dimSituation] (id int NOT NULL, Situation nvarchar(128) NOT NULL)\nWITH (\n\tDISTRIBUTION = REPLICATE,\n--\tCLUSTERED INDEX(id)\n\tHEAP\n)\nGO\nALTER TABLE [ese_DataFlow].[dimSituation] add CONSTRAINT PK_dimSituation_id PRIMARY KEY NONCLUSTERED (ID) NOT ENFORCED\nGO\n\n-- =============================================================================\n-- ETL Config\n-- =============================================================================\nIF EXISTS (SELECT * FROM sys.objects WHERE NAME = 'configETL' AND TYPE = 'U')\n\tDROP TABLE [ese_DataFlow].[configETL]\nGO\nCREATE TABLE [ese_DataFlow].[configETL] (\n\tSourceSystem nvarchar(128) NOT NULL,\n\tSourceFolder nvarchar(128) NOT NULL,\n    SourceFileName nvarchar(128) NOT NULL,\n    SourceFileExtension nvarchar(16) NOT NULL,\n\tDestinationSchema NVARCHAR(128) NOT NULL,\n\tDestinationTable NVARCHAR(128) NOT NULL,\n    IsActive BIT NOT NULL\n)\nWITH (\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nGO\nCREATE INDEX IX_configETL_IsActive ON [ese_DataFlow].[configETL](IsActive);\nGO\n\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimAssistMethod', 'csv', 'ese_DataFlow', 'dimAssistMethod',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimBodypart', 'csv', 'ese_DataFlow', 'dimBodypart',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimCountry', 'csv', 'ese_DataFlow', 'dimCountry',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimEventType', 'csv', 'ese_DataFlow', 'dimEventType',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimEventType2', 'csv', 'ese_DataFlow', 'dimEventType2',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimLocation', 'csv', 'ese_DataFlow', 'dimLocation',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimShotOutcome', 'csv', 'ese_DataFlow', 'dimShotOutcome',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimShotPlace', 'csv', 'ese_DataFlow', 'dimShotPlace',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europeuropesoccereventsesoccer', 'raw/dimensions.csv', 'dimSide', 'csv', 'ese_DataFlow', 'dimSide',  1)\nINSERT INTO [ese_DataFlow].[configETL] (SourceSystem, SourceFolder, SourceFileName, SourceFileExtension, DestinationSchema, DestinationTable, IsActive) VALUES ('europesoccerevents', 'raw/dimensions.csv', 'dimSituation', 'csv', 'ese_DataFlow', 'dimSituation',  1)\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "DemoSQLPool",
				"poolName": "DemoSQLPool"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}