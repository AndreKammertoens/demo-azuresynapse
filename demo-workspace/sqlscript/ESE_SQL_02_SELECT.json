{
	"name": "ESE_SQL_02_SELECT",
	"properties": {
		"folder": {
			"name": "Europe Soccer Events/01_Serverless_DataLake"
		},
		"content": {
			"query": "-- =============================================================================\n-- European Soccer Events\n-- Azure Synapse Analytics Demo\n-- https://github.com/aessing/demo-azuresynapse\n-- -----------------------------------------------------------------------------\n-- Developer.......: Andre Essing (https://www.andre-essing.de/)\n--                                (https://github.com/aessing)\n--                                (https://twitter.com/aessing)\n--                                (https://www.linkedin.com/in/aessing/)\n-- -----------------------------------------------------------------------------\n-- THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n-- EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n-- WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n-- =============================================================================\n\n-- #############################################################################\n-- DON'T FORGET TO CHOOSE BUILT-IN\n-- #############################################################################\n\n\n-- -----------------------------------------------------------------------------\n-- How many rows do we have?\nSELECT\n    COUNT(1)\nFROM\n    OPENROWSET(\n        BULK 'https://demomdwhdls001weu.dfs.core.windows.net/europesoccerevents/curated/game_events.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\n-- -----------------------------------------------------------------------------\n-- How does the table look like?\nSELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://demomdwhdls001weu.dfs.core.windows.net/europesoccerevents/curated/game_events.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\n-- -----------------------------------------------------------------------------\n-- Take a peek at all GOALS!!!\nSELECT TOP 100 * \nFROM\n    OPENROWSET(\n        BULK 'https://demomdwhdls001weu.dfs.core.windows.net/europesoccerevents/curated/game_events.parquet',\n        FORMAT='PARQUET'\n    )  AS [result]\nWHERE is_goal = 1\n\n\n-- -----------------------------------------------------------------------------\n-- If one wants to see the distribution of goals by shot placement, \n-- then it could look like this simple query and resulting pie-chart\n-- (or alternatively viewable as a data-grid).\n\n-- Pie chart\n--      Category: shot_place\n--      Legend: TOT_GOALS\n\nSELECT \n    CASE \n        WHEN \n            shot_place_str = 'NA'\n        THEN 'Unknown' \n        ELSE   \n            shot_place_str \n        END shot_place,\n    COUNT(1) AS TOT_GOALS\nFROM\n    OPENROWSET(\n        BULK 'https://demomdwhdls001weu.dfs.core.windows.net/europesoccerevents/curated/game_events.parquet',\n        FORMAT='PARQUET'\n    )  AS [result]\n WHERE is_goal = 1\n GROUP BY shot_place_str\n\n\n-- -----------------------------------------------------------------------------\n-- Top 3 goal locations per shot placement in the Spanish League\n-- Once we observe that Spanish league has had most goals over the term of this data,\n-- we could find the top 3 goals locations per shot place from the games in Spain, by\n-- writing a more involved query using Window functions in Spark SQL. It would be a\n-- stepwise nested query.\nSELECT SHOT_PLACE_STR, LOCATION_STR, TOT_GOALS\n  FROM (\n     SELECT SHOT_PLACE_STR, LOCATION_STR, TOT_GOALS,\n            RANK() OVER (PARTITION BY SHOT_PLACE_STR ORDER BY TOT_GOALS DESC) goals_rank\n       FROM (\n              SELECT CASE WHEN LOCATION_STR = 'NA' THEN 'Unknown' ELSE LOCATION_STR END LOCATION_STR, \n                    CASE WHEN SHOT_PLACE_STR = 'NA' THEN 'Unknown' ELSE SHOT_PLACE_STR END SHOT_PLACE_STR, \n                    COUNT(1) AS TOT_GOALS\n              FROM \n                OPENROWSET(\n                    BULK 'https://demomdwhdls001weu.dfs.core.windows.net/europesoccerevents/curated/game_events.parquet',\n                    FORMAT='PARQUET'\n                )  AS [result]\n              WHERE is_goal = 1 AND COUNTRY_CODE = 'ESP' \n             GROUP BY SHOT_PLACE_STR, LOCATION_STR\n       ) tmp_in\n       WHERE TOT_GOALS IS NOT NULL AND TOT_GOALS <> 0\n     ) tmp_out\nWHERE goals_rank <= 3 AND LOCATION_STR != 'Unknown' AND SHOT_PLACE_STR != 'Unknown'\nORDER BY SHOT_PLACE_STR\n\n\n-- -----------------------------------------------------------------------------\n-- Goals per time bin per country/league\n-- We could do time-based analysis as well, e.g. by observing the total number of\n-- goals over the course of a game (0-90+ minutes), across all games in the five\n-- leagues. We could use the “time_bin” column created as part of the transformation\n-- process earlier, rather than a continuous variable like “time”.\nSELECT COUNTRY_CODE, TIME_BIN, COUNT(1) TOT_GOALS\n  FROM\n     OPENROWSET(\n        BULK 'https://demomdwhdls001weu.dfs.core.windows.net/europesoccerevents/curated/game_events.parquet',\n        FORMAT='PARQUET'\n    )  AS [result]\n WHERE is_goal = 1\n GROUP BY COUNTRY_CODE, TIME_BIN\n ORDER BY COUNTRY_CODE, TIME_BIN",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}